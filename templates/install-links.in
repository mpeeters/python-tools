#!/usr/bin/env python
# copied from buildout.python
import glob
import os
import sys


def yesno(question):
    question = "%s [yes/No] " % question
    answers = {
        False: ('', 'n', 'no'),
        True: ('y', 'yes'),
    }
    while 1:
        answer = raw_input(question).lower()
        for option in answers:
            if answer in answers[option]:
                return option
        print >>sys.stderr, "You have to answer with y, yes, n or no."


buildout = "${buildout:directory}"
prefix = os.path.expanduser("${install-links:prefix}")
bindir = os.path.join(prefix, 'bin')


if not os.path.exists(bindir):
    if not yesno("Create directory '%s'?" % bindir):
        sys.exit(1)
    os.makedirs(bindir)

executables = (
    'black',
    'check-manifest',
    'doc8',
    'flake8',
    'fullrelease',
    'i18ndude',
    'lasttagdiff',
    'lasttaglog',
    'mrbob',
    'pycodestyle',
    'plonecli',
    'pocompile',
    'polint',
    'postrelease',
    'pot-create',
    'prerelease',
    'pyflakes',
    'pylint',
    'pyroma',
    'release',
)

files = [glob.glob(os.path.join(buildout, 'bin', f))[0]
         for f in executables]
files.sort()
links = [(x, os.path.basename(x)) for x in files]
for src, name in links:
    if not os.path.exists(src):
        continue
    dst = os.path.join(bindir, name)
    if os.path.lexists(dst):
        if os.path.islink(dst):
            if os.readlink(dst) == src:
                print "No change needed for symlink to '%s' at '%s'." % (src, dst)
                continue
            else:
                if not yesno("Replace symlink at '%s' pointing to '%s' with symlink to '%s'?" % (dst, os.readlink(dst), src)):
                    continue
                os.unlink(dst)
        else:
            if not yesno("Replace regular file '%s' with symlink to '%s'?" % (dst, src)):
                continue
            os.unlink(dst)
    os.symlink(src, dst)
    print "Created symlink to '%s' at '%s'." % (src, dst)
